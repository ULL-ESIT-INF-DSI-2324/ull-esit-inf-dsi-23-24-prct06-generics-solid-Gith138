{"version":3,"file":"/home/usuario/DSI/ull-esit-inf-dsi-23-24-prct06-generics-solid-Gith138/src/ejercicio-pe102.ts","sources":["/home/usuario/DSI/ull-esit-inf-dsi-23-24-prct06-generics-solid-Gith138/src/ejercicio-pe102.ts"],"names":[],"mappings":";;;AAmBA;;;;;GAKG;AACH,MAAsB,oBAAoB;IACxC,YAAsB,KAAU;QAAV,UAAK,GAAL,KAAK,CAAK;IAChC,CAAC;IAAA,CAAC,CAAC,iBAAiB;IAEpB,OAAO,CAAC,OAAU;QAChB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;IAED,OAAO,CAAC,KAAa;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,wCAAwC;IACpE,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAO,CAAC,CAAC,qEAAqE;IACrG,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,0CAA0C;IACtE,CAAC;CAGF;AArBD,oDAqBC;AAED;;;;;;;GAOG;AACH,MAAa,2BAA4B,SAAQ,oBAA4B;IAC3E,MAAM,CAAC,cAAsB;QAC3B,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,KAAK,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC;IACxE,CAAC;CACF;AAJD,kEAIC;AAED;;;;;;;GAOG;AACH,MAAa,0BAA2B,SAAQ,oBAA4B;IAC1E,MAAM,CAAC,iBAAyB;QAC9B,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,CAAC;IACrE,CAAC;CACF;AAJD,gEAIC","sourcesContent":["/**\n * @class Collectable\n * @description Implementación de una clase genérica que implementa una interfaz genérica\n */\ninterface Collectable<T> {\n  addItem(newItem: T): void;\n  getItem(index: number): T;\n  removeItem(index: number): T;\n  getNumberOfItems(): number;\n}\n\n/**\n * @class SearchableCollection\n * @description Clase que implementa la interfaz Collectable y la interfaz Searchable\n */\ninterface Searchable<T> {\n  search(name: string ): T[] | undefined;\n}\n\n/**\n * @class SearchableCollection\n * @description Clase que implementa la interfaz Searchable\n * @extends SearchableCollection\n * @implements Searchable\n */\nexport abstract class SearchableCollection<T> implements Searchable<T>, Collectable<T> {\n  constructor(protected items: T[]) {\n  }; // Array de items\n\n  addItem(newItem: T): void { // Añadir un item\n    this.items.push(newItem);\n  }\n\n  getItem(index: number): T { // Obtener un item\n    return this.items[index]; // Devuelve el item en la posición index\n  }\n\n  removeItem(): T { // Eliminar un item\n    return this.items.pop() as T; // Devuelve el último item del array, eliminándolo y usando el tipo T\n  }\n\n  getNumberOfItems(): number { // Obtener el número de items\n    return this.items.length; // Devuelve el número de items en el array\n  }\n\n  abstract search(name: string): T[] | undefined; // Buscar un item\n}\n\n/**\n * @class NumericSearchableCollection\n * @description Clase que implementa la interfaz Searchable\n * @extends SearchableCollection\n * @implements Searchable\n * @param numberToSearch\n * @returns number[] | undefined\n */\nexport class NumericSearchableCollection extends SearchableCollection<number> {\n  search(numberToSearch: string) { // Buscar un número\n    return this.items.filter((item) => item === parseInt(numberToSearch));\n  }\n}\n\n/**\n * @class StringSearchableCollection\n * @description Clase que implementa la interfaz Searchable\n * @extends SearchableCollection\n * @implements Searchable\n * @param substringToSearch\n * @returns string[] | undefined\n */\nexport class StringSearchableCollection extends SearchableCollection<string> {\n  search(substringToSearch: string): string[] | undefined { // Buscar un substring\n    return this.items.filter(item => item.includes(substringToSearch));\n  }\n}\n\n"]}